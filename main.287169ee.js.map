{"version":3,"sources":["scripts/main.js"],"names":["firstPromise","Promise","resolve","reject","document","addEventListener","setTimeout","Error","secondPromise","thirdPromise","right","left","event","button","handleNotification","message","status","element","createElement","innerHTML","querySelector","append","handleSuccess","handleError","then","result","catch","error"],"mappings":";AACA,aAEA,IAAMA,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCC,SAASC,iBAAiB,QAAS,WACjCH,EAAQ,gCAGVI,WAAW,WACTH,EAAO,IAAII,MAAM,gCAChB,OAGCC,EAAgB,IAAIP,QAAQ,SAACC,GACjCE,SAASC,iBAAiB,QAAS,WACjCH,EAAQ,iCAGVE,SAASC,iBAAiB,cAAe,WACvCH,EAAQ,mCAINO,EAAe,IAAIR,QAAQ,SAACC,GAC5BQ,IAAAA,GAAQ,EACRC,GAAO,EAEXP,SAASC,iBAAiB,YAAa,SAAAO,GACrCR,SAASC,iBAAiB,QAAS,WACjCM,EAAwB,IAAjBC,EAAMC,QAAgBF,IAG/BP,SAASC,iBAAiB,cAAe,WACvCK,EAAyB,IAAjBE,EAAMC,QAAgBH,IAGX,IAAjBE,EAAMC,QAAiC,IAAjBD,EAAMC,SAIhCF,EAAwB,IAAjBC,EAAMC,QAAgBF,EAC7BD,EAAyB,IAAjBE,EAAMC,QAAgBH,EAEzBC,GAASD,GAIdR,EAAQ,mCAINY,EAAqB,SAACC,EAASC,GAC7BC,IAAAA,EAAUb,SAASc,cAAc,OAEvCD,EAAQE,UACqCH,kDAAAA,OAAAA,EACzCD,YAAAA,OAAAA,EAFJ,kBAKAX,SAASgB,cAAc,sBAAsBC,OAAOJ,IAGhDK,EAAgB,SAACP,GAAYD,OAAAA,EAAmBC,EAAS,YAEzDQ,EAAc,SAACR,GAAYD,OAAAA,EAAmBC,EAAS,YAE7Df,EACGwB,KAAK,SAAAC,GACJH,EAAcG,KAEfC,MAAM,SAAAC,GACLJ,EAAYI,KAGhBnB,EACGgB,KAAK,SAAAC,GACJH,EAAcG,KAGlBhB,EACGe,KAAK,SAAAC,GACJH,EAAcG,KAEfC,MAAM,SAAAC,GACLJ,EAAYI","file":"main.287169ee.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-shadow */\n'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let right = false;\n  let left = false;\n\n  document.addEventListener('mousedown', event => {\n    document.addEventListener('click', () => {\n      left = event.button === 0 || left;\n    });\n\n    document.addEventListener('contextmenu', () => {\n      right = event.button === 2 || right;\n    });\n\n    if (event.button !== 0 && event.button !== 2) {\n      return;\n    }\n\n    left = event.button === 0 || left;\n    right = event.button === 2 || right;\n\n    if (!left || !right) {\n      return;\n    }\n\n    resolve('Third promise was resolved');\n  });\n});\n\nconst handleNotification = (message, status) => {\n  const element = document.createElement('div');\n\n  element.innerHTML = `\n  <div data-qa=\"notification\" class=\"message ${status}\">\n    ${message}\n  </div>\n  `;\n  document.querySelector('.message-container').append(element);\n};\n\nconst handleSuccess = (message) => handleNotification(message, 'success');\n\nconst handleError = (message) => handleNotification(message, 'warning');\n\nfirstPromise\n  .then(result => {\n    handleSuccess(result);\n  })\n  .catch(error => {\n    handleError(error);\n  });\n\nsecondPromise\n  .then(result => {\n    handleSuccess(result);\n  });\n\nthirdPromise\n  .then(result => {\n    handleSuccess(result);\n  })\n  .catch(error => {\n    handleError(error);\n  });\n"]}